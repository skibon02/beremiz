// widget_page.ysl2

widget_desc("Page") {
    longdesc
    ||

    Arguments are either:

    - XXX reference path TODO

    - name=value: setting variable with literal value.
    - name=other_name: copy variable content into another

    "active"+"inactive" labeled elements can be provided to show feedback when pressed

    Exemples:

    HMI:Page:notify=1@notify=/PLCVAR
    HMI:Page:ack=2:notify=1@ack=.local_var@notify=/PLCVAR

    ||

    shortdesc > Page 

}

widget_defs("Page") {

    |     assignments: {},
    |     dispatch: function(value, oldval, varnum) {
    const "widget", ".";
    foreach "path" {
        const "varid","generate-id()";
        const "varnum","position()-1";
        if "@assign" foreach "$widget/path[@assign]" if "$varid = generate-id()" {
    |         if(varnum == «$varnum») this.assignments["«@assign»"] = value;
        }
    }
    |     },
    |     assign: function() {
    const "paths","path";
    foreach "arg[contains(@value,'=')]"{
        const "name","substring-before(@value,'=')";
        const "value","substring-after(@value,'=')";
        const "index" foreach "$paths" if "@assign = $name" value "position()-1";
        const "isVarName", "regexp:test($value,'^[a-zA-Z_][a-zA-Z0-9_]+$')";
        choose {
            when "$isVarName"{
    |         const «$value» = this.assignments["«$value»"];
    |         if(«$value» != undefined)
    |             this.apply_hmi_value(«$index», «$value»);
            }
            otherwise {
    |         this.apply_hmi_value(«$index», «$value»);
            }
        }
    }
    |     },
}

